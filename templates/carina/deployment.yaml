apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oea
    component: carina
{{ include "oea.standard-labels" . | indent 4 }}
  name: oea-carina
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: oea
      component: carina
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: oea
        component: carina
{{ include "oea.standard-labels" . | indent 8 }}
      annotations:
{{- if .Values.carina.annotations -}}
        {{ toYaml .Values.carina.annotations | nindent 8 }}
{{- end }}
    spec:
      containers:
      - image: {{ template "carina.image" . }}
        imagePullPolicy: IfNotPresent
        name: oea-carina
        ports:
        - containerPort: 8090
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/secrets/controller-ca.crt 
          name: ca-certs-volume
          subPath: tls.crt
        - mountPath: /app/secrets/controller-control/tls.crt
          name: certs-volume
          subPath: tls.crt
        - mountPath: /app/secrets/controller-control/tls.key
          name: certs-volume
          subPath: tls.key
        - mountPath: /app/config/carina-manager.yaml
          name: carina-volume
          subPath: carina-manager.yaml          
      dnsPolicy: ClusterFirst
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret }}
      {{- end }}
      initContainers:
      - name: db-check
        image: {{ .Values.global.customImages.registry }}/postgres:9.6.5
        imagePullPolicy: IfNotPresent
        command: ['/bin/bash', '-c', "sleep 30;echo Waiting for oea-db to be up and running; pg_isready -h oea-db -p 5432 && echo PostgreSQL DB is ready to receive connections"]
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: certs-volume
        secret:
          defaultMode: 420
          secretName: oes-control-secret
      - name: ca-certs-volume
        secret:
          defaultMode: 420
          secretName: ca-secret
      - secret:
          items:
          - key: carina-manager.yaml
            path: carina-manager.yaml
          secretName: oea-carina-config
        name: carina-volume
