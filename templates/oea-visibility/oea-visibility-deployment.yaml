{{- if (eq .Values.installationMode "OEA-AP") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oea
    component: visibility
{{ include "oea.standard-labels" . | indent 4 }}
  name: oea-visibility
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oea
      component: visibility
  strategy: {}
  template:
    metadata:
      annotations:
        configmap/checksum: {{ (.Files.Glob "config/oea-visibility/visibility-local.yml").AsConfig | sha256sum }}
{{- if .Values.visibility.annotations -}}
        {{ toYaml .Values.visibility.annotations | nindent 8 }}
{{- end }}
      labels:
        app: oea
        component: visibility
{{ include "oea.standard-labels" . | indent 8 }}
    spec:
      {{- if (eq .Values.db.enabled true) }}
      initContainers:
      - name: db-check
        image: {{ .Values.global.customImages.registry }}/postgres:9.6.5
        command: ['/bin/bash', '-c', "sleep 30;echo Waiting for oea-db to be up and running; pg_isready -h oea-db -p 5432 && echo PostgreSQL DB is ready to receive connections"]
      {{- end }}
      containers:
      - image: {{ template "visibility.image" . }}
        name: oea-visibility
        ports:
        - containerPort: 8096
          protocol: TCP
        env:
        env:
       {{- if .Values.extraEnvVars }}
       {{- include "tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 8 }}
       {{- end }}
        volumeMounts:
        - mountPath: /opsmx/conf/visibility-local.yml
          name: visibility-config
          subPath: visibility-local.yml
        - mountPath: /opsmx/conf/bootstrap.yml
          name: bootstrap-config-volume
          subPath: bootstrap.yml
        - mountPath: /opsmx/conf/standard-error-code.csv
          name: standard-error-conf
          subPath: standard-error-codes.csv
        {{- if .Values.global.customCerts.enabled }}
        - mountPath: /etc/pki/ca-trust/extracted/java/cacerts
          subPath: cacerts
          name: cacerts
        {{- end }}
        resources:
{{ toYaml .Values.visibility.resources | indent 12 }}
        readinessProbe:
          tcpSocket:
            port: 8096
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /mgmt/health
            port: 8096
          initialDelaySeconds: 30
          periodSeconds: 60
      {{- if .Values.imagePullSecret}}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret}}
      {{- end }}
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.global.affinity }}
      affinity:
{{ toYaml .Values.global.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.global.customCerts.enabled }}
      - name: cacerts
        secret:
          secretName: {{ .Values.global.customCerts.secretName }}
          items:
          - key: cacerts
            path: cacerts
      {{- end }}
      - name: visibility-config
        secret:
          secretName: oea-visibility-config
      - secret:
          items:
          - key: bootstrap.yml
            path: bootstrap.yml
          secretName: bootstrap
        name: bootstrap-config-volume
      - configMap:
          defaultMode: 420
          items:
          - key: standard-error-codes.csv
            path: standard-error-codes.csv
          name: standard-error-codes-config
        name: standard-error-conf
{{- end -}}
